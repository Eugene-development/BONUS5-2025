import { redirect } from '@sveltejs/kit';
import { API_CONFIG } from '$lib/config/api.js';

/** @type {import('@sveltejs/kit').Handle} */
export async function handle({ event, resolve }) {
	// –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö cookies –æ—Ç Laravel Sanctum
	const laravelSession = event.cookies.get('laravel_session');
	const xsrfToken = event.cookies.get('XSRF-TOKEN');

	// –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å—á–∏—Ç–∞–µ—Ç—Å—è –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –µ—Å–ª–∏ –µ—Å—Ç—å –æ–±–µ cookie
	// –ë–æ–ª–µ–µ –º—è–≥–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ - –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ laravel_session
	event.locals.isAuthenticated = !!laravelSession;
	event.locals.authToken = laravelSession;
	event.locals.user = null;

	// –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω, –ø–æ–ª—É—á–∞–µ–º –µ–≥–æ –¥–∞–Ω–Ω—ã–µ
	if (laravelSession) {
		try {
			const response = await fetch(`${API_CONFIG.baseUrl}/api/user`, {
				method: 'GET',
				headers: {
					Accept: 'application/json',
					Cookie: `laravel_session=${laravelSession}${xsrfToken ? `; XSRF-TOKEN=${xsrfToken}` : ''}`,
					'X-XSRF-TOKEN': xsrfToken ? decodeURIComponent(xsrfToken) : '',
					Referer: API_CONFIG.baseUrl,
					Origin: API_CONFIG.baseUrl
				}
			});

			if (response.ok) {
				const userData = await response.json();
				event.locals.user = userData.user || userData;
				event.locals.isAuthenticated = true;
			} else {
				// –ï—Å–ª–∏ –ø–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ —É–¥–∞–ª–æ—Å—å, —Å—á–∏—Ç–∞–µ–º –Ω–µ–∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–º
				event.locals.isAuthenticated = false;
				event.locals.user = null;
			}
		} catch (error) {
			console.error('Error fetching user data in hooks:', error);
			event.locals.isAuthenticated = false;
			event.locals.user = null;
		}
	}

	// –î–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏
	console.log('üîç Auth check:', {
		path: event.url.pathname,
		laravelSession: !!laravelSession,
		xsrfToken: !!xsrfToken,
		isAuthenticated: event.locals.isAuthenticated,
		userEmail: event.locals.user?.email,
		emailVerified: event.locals.user?.email_verified
	});

	return resolve(event);
}
